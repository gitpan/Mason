use Mason::Component::Moose;
our ($m, $_m_buffer);
*m = \$Mason::Request::current_request;
*_m_buffer = \$Mason::Request::current_buffer;
sub _inner { inner() }
my $_class_cmeta;
method _set_class_cmeta ($interp) {
$_class_cmeta = $interp->component_class_meta_class->new(
'class' => CLASS,
'dir_path' => '/tmp',
'interp' => $interp,
'is_top_level' => '1',
'object_file' => __FILE__,
'path' => '/tmp/session.m',
'source_file' => '/Users/swartz/git/mason.git/tmp/blog/comps/tmp/session.m',
);
}
sub _class_cmeta { $_class_cmeta }
method main  {
#line 3 "/Users/swartz/git/mason.git/tmp/blog/comps/tmp/session.m"

$m->req->session->{count}++;

#line 1 "/Users/swartz/git/mason.git/tmp/blog/comps/tmp/session.m"
for (scalar(Data::Dumper::Dumper($m->req->session))) { $$_m_buffer .= $_ if defined }
#line 1 "/Users/swartz/git/mason.git/tmp/blog/comps/tmp/session.m"
$$_m_buffer .= '
';

;return;
}

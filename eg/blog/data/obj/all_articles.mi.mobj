use Mason::Component::Moose;
our ($m, $_m_buffer);
*m = \$Mason::Request::current_request;
*_m_buffer = \$Mason::Request::current_buffer;
sub _inner { inner() }
my $_class_cmeta;
method _set_class_cmeta ($interp) {
$_class_cmeta = $interp->component_class_meta_class->new(
'class' => CLASS,
'dir_path' => '/',
'interp' => $interp,
'is_top_level' => '0',
'object_file' => __FILE__,
'path' => '/all_articles.mi',
'source_file' => '/Users/swartz/git/mason.git/tmp/blog/comps/all_articles.mi',
);
}
sub _class_cmeta { $_class_cmeta }
method main  {
#line 13 "/Users/swartz/git/mason.git/tmp/blog/comps/all_articles.mi"

my @articles = @{ Blog::Article::Manager->get_articles
    (sort_by => 'create_time DESC') };

#line 1 "/Users/swartz/git/mason.git/tmp/blog/comps/all_articles.mi"
 if (@articles) {
$$_m_buffer .= '<b>Showing ';
for (scalar(scalar(@articles))) { $$_m_buffer .= $_ if defined }
#line 2 "/Users/swartz/git/mason.git/tmp/blog/comps/all_articles.mi"
$$_m_buffer .= ' article';
#line 2 "/Users/swartz/git/mason.git/tmp/blog/comps/all_articles.mi"
for (scalar(@articles > 1 ? "s" : "")) { $$_m_buffer .= $_ if defined }
#line 2 "/Users/swartz/git/mason.git/tmp/blog/comps/all_articles.mi"
$$_m_buffer .= '.</b>
<ul class="articles">
';
#line 4 "/Users/swartz/git/mason.git/tmp/blog/comps/all_articles.mi"
   foreach my $article (@articles) {
$$_m_buffer .= '  <li>';
$m->comp(   'article/display.mi', article => $article   
); #line 5 "/Users/swartz/git/mason.git/tmp/blog/comps/all_articles.mi"
$$_m_buffer .= '</li>
';
#line 6 "/Users/swartz/git/mason.git/tmp/blog/comps/all_articles.mi"
   }
$$_m_buffer .= '</ul>
';
 }
 else {
$$_m_buffer .= '<p>No articles yet.</p>
';
 }

;return;
}

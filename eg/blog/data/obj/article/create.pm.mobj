use Mason::Component::Moose;
our ($m, $_m_buffer);
*m = \$Mason::Request::current_request;
*_m_buffer = \$Mason::Request::current_buffer;
sub _inner { inner() }
my $_class_cmeta;
method _set_class_cmeta ($interp) {
$_class_cmeta = $interp->component_class_meta_class->new(
'class' => CLASS,
'dir_path' => '/article',
'interp' => $interp,
'is_top_level' => '1',
'object_file' => __FILE__,
'path' => '/article/create.pm',
'source_file' => '/Users/swartz/git/mason.git/tmp/blog/comps/article/create.pm',
);
}
sub _class_cmeta { $_class_cmeta }
#line 1 "/Users/swartz/git/mason.git/tmp/blog/comps/article/create.pm"
 has 'content';
has 'title';

method handle {
    if (! $self->content  || ! $self->title ) {
        $m->req->session->{message} = "Content and title required.";
        $m->redirect('/add');
    }
    my $article = Blog::Article->new(title =>  $self->title , content =>  $self->content , create_time => time());
    $article->save;
    $m->req->session->{message} = sprintf("Article '%s' saved.",  $self->title );
    $m->redirect('/');
}

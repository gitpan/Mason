use Mason::Component::Moose;
our ($m, $_m_buffer);
*m = \$Mason::Request::current_request;
*_m_buffer = \$Mason::Request::current_buffer;
sub _inner { inner() }
my $_class_cmeta;
method _set_class_cmeta ($interp) {
$_class_cmeta = $interp->component_class_meta_class->new(
'class' => CLASS,
'dir_path' => '/article',
'interp' => $interp,
'is_top_level' => '1',
'object_file' => __FILE__,
'path' => '/article/publish.pm',
'source_file' => '/Users/swartz/git/mason.git/tmp/blog/comps/article/publish.pm',
);
}
sub _class_cmeta { $_class_cmeta }
#line 1 "/Users/swartz/git/mason.git/tmp/blog/comps/article/publish.pm"
 has 'content';
has 'title';

method handle () {
    my $session = $m->req->session;
    if ( ! $self->content  || ! $self->title  ) {
        $session->{message} = "Content and title required.";
        $session->{form_data} =  $self->cmeta ->args;
        $m->redirect('/new_article');
    }
    my $article =
      Blog::Article->new( title =>  $self->title , content =>  $self->content , create_time => time() );
    $article->save;
    $session->{message} = sprintf( "Article '%s' saved.",  $self->title  );
    $m->redirect('/');
}
